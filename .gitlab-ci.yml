# GitLab CI/CD pipeline for Cashnest
# Updated: Use docker-compose for compatibility
stages:
  - deploy

before_script:
  - apt-get update && apt-get install -y openssh-client

deploy_backend:
  stage: deploy
  only:
    - main
  script:
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > id_rsa
    - chmod 600 id_rsa
    - ssh -o StrictHostKeyChecking=no -i id_rsa $EC2_USER@$EC2_HOST 'cd ~/cashnest && git fetch origin && git reset --hard origin/main && docker-compose down --remove-orphans 2>/dev/null || true && docker rm -f $(docker ps -aq) 2>/dev/null || true && sleep 2 && docker system prune -f && docker-compose up -d --build'
    - rm -f id_rsa

deploy_frontend:
  stage: deploy
  only:
    - main
  script:
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > id_rsa
    - chmod 600 id_rsa
    - ssh -o StrictHostKeyChecking=no -i id_rsa $EC2_USER@$EC2_HOST 'cd ~/cashnest && git fetch origin && git reset --hard origin/main && docker-compose down --remove-orphans 2>/dev/null || true && docker rm -f $(docker ps -aq) 2>/dev/null || true && sleep 2 && docker system prune -f && docker-compose up -d --build'
    - rm -f id_rsa

debug_ssh:
  stage: deploy
  only:
    - main
  script:
    - echo "EC2_USER is $EC2_USER"
    - echo "EC2_HOST is $EC2_HOST"
    - echo "$SSH_PRIVATE_KEY" > id_rsa
    - wc -l id_rsa
    - echo "SSH_PRIVATE_KEY file created successfully"
    - rm id_rsa
  when: manual
